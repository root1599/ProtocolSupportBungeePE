buildscript {
	dependencies {
		classpath 'org.jdom:jdom2:2.0.6'
		classpath 'org.ow2.asm:asm:5.1'
		classpath 'org.ow2.asm:asm-commons:5.1'
		classpath 'commons-io:commons-io:2.5'
		classpath 'org.apache.ant:ant:1.9.7'
		classpath 'org.codehaus.plexus:plexus-utils:3.0.24'
		classpath 'org.vafer:jdependency:1.1'
		classpath files('gradle/plugins/shadowPlugin.jar')
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
}

apply from: 'helper.gradle'
apply plugin: com.github.jengelman.gradle.plugins.shadow.ShadowPlugin

tasks.withType(AbstractCompile) {
	classpath += configurations.shadow
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

group 'protocolsupport'
version '1.4.dev'

sourceCompatibility = JavaVersion.VERSION_1_8

File librariesRuntimeDirectory = new File("libraries_runtime")
File librariesShadeDirectory = new File("libraries_shade")
File targetJarDirectory = new File("target")
String resourcesDirectoryName = "resources";

task setupFolders(type: DefaultTask) {doLast{
	librariesRuntimeDirectory.mkdirs()
	librariesShadeDirectory.mkdirs()
	targetJarDirectory.mkdirs()
}}

task updateRuntimeLibraries(type: UpdateLibrariesTask) {
	directory = librariesRuntimeDirectory
	libraries = [
		[url: "https://papermc.io/ci/job/Travertine/99/artifact/Travertine-Proxy/bootstrap/target/Travertine.jar", name: "bungeecord-3.jar"]
	]
}

task updateShadeLibraries(type: UpdateLibrariesTask) {
	directory = librariesShadeDirectory
	libraries = [
		[url: "https://build.true-games.org/job/RakNetServer/30/artifact/target/RakNetServer.jar", name: "raknetserver-7.jar"],
		[url: "https://build.true-games.org/job/UdpServerSocketChannel/11/artifact/target/UdpServerSocketChannel.jar", name: "udpserver-2.jar"]
	]
}


sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
		resources {
			srcDirs = ['resources']
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	shadow fileTree(dir: librariesRuntimeDirectory, include: '*.jar')
	compile fileTree(dir: librariesShadeDirectory, include: '*.jar')
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.2'
	compile group: 'it.unimi.dsi', name: 'fastutil', version: '8.1.1'
}

task copyFinalJarToTarget(type: Copy) {
	// JitPack searches for the output jar at the standard Gradle output directory (jar.archivePath)
	// By copying it from there to our target destination JitPack can archive it in a Maven repository
	from jar.archivePath.getPath()
	into 'target'
	//remove version suffix
	rename (jar.archiveName, jar.baseName + '.jar')
}

shadowJar {
	doFirst {
		new File(destinationDir, archiveName).delete()
	}

	from sourceSets.main.java.srcDirs
	from 'LICENSE'


	//remove the -all suffix
	archiveName = jar.archiveName
	minimizeJar = true

	exclude 'META-INF/**'
	relocate 'org.apache', 'protocolsupport.libs.org.apache'
	relocate 'com.nimbusds', 'protocolsupport.libs.com.nimbusds'
	relocate 'org.objectweb', 'protocolsupport.libs.org.objectweb'
	relocate 'net.minidev', 'protocolsupport.libs.net.minidev'
	relocate 'net.jcip', 'protocolsupport.libs.net.jcip'
	relocate 'raknetserver', 'protocolsupport.libs.raknetserver'
	relocate 'udpserversocketchannel', 'protocolsupport.libs.udpserversocketchannel'
	relocate 'it.unimi.dsi.fastutil', 'protocolsupport.libs.it.unimi.dsi.fastutil'
}


compileJava.dependsOn(clean)
compileJava.dependsOn(setupFolders)
compileJava.dependsOn(updateRuntimeLibraries)
compileJava.dependsOn(updateShadeLibraries)
jar.enabled = false
jar.finalizedBy(shadowJar)
shadowJar.finalizedBy(copyFinalJarToTarget)